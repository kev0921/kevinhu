"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/spotify";
exports.ids = ["pages/api/spotify"];
exports.modules = {

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("querystring");

/***/ }),

/***/ "(api)/./src/pages/api/spotify.js":
/*!**********************************!*\
  !*** ./src/pages/api/spotify.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"getNowPlaying\": () => (/* binding */ getNowPlaying)\n/* harmony export */ });\n/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! querystring */ \"querystring\");\n/* harmony import */ var querystring__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(querystring__WEBPACK_IMPORTED_MODULE_0__);\n/* eslint-disable import/no-anonymous-default-export */ \nconst { NEXT_PUBLIC_SPOTIFY_CLIENT_ID: client_id , NEXT_PUBLIC_SPOTIFY_CLIENT_SECRET: client_secret , NEXT_PUBLIC_SPOTIFY_REFRESH_TOKEN: refresh_token  } = process.env;\nconst basic = Buffer.from(`${client_id}:${client_secret}`).toString(\"base64\");\nconst NOW_PLAYING_ENDPOINT = `https://api.spotify.com/v1/me/player/currently-playing`;\nconst TOKEN_ENDPOINT = `https://accounts.spotify.com/api/token`;\nconst getAccessToken = async ()=>{\n    const response = await fetch(TOKEN_ENDPOINT, {\n        method: \"POST\",\n        headers: {\n            Authorization: `Basic ${basic}`,\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: querystring__WEBPACK_IMPORTED_MODULE_0___default().stringify({\n            grant_type: \"refresh_token\",\n            refresh_token\n        })\n    });\n    return response.json();\n};\nconst getNowPlaying = async ()=>{\n    const { access_token  } = await getAccessToken();\n    return fetch(NOW_PLAYING_ENDPOINT, {\n        headers: {\n            Authorization: `Bearer ${access_token}`\n        }\n    });\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (async (_, res)=>{\n    const response = await getNowPlaying();\n    if (response.status === 204 || response.status > 400) {\n        return res.status(200).json({\n            isPlaying: false\n        });\n    }\n    const song = await response.json();\n    const isPlaying = song.is_playing;\n    const title = song.item.name;\n    const artist = song.item.artists.map((_artist)=>_artist.name).join(\", \");\n    const album = song.item.album.name;\n    const albumImageUrl = song.item.album.images[0].url;\n    const songUrl = song.item.external_urls.spotify;\n    return res.status(200).json({\n        album,\n        albumImageUrl,\n        artist,\n        isPlaying,\n        songUrl,\n        title\n    });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvcGFnZXMvYXBpL3Nwb3RpZnkuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHFEQUFxRCxHQUNmO0FBRXRDLE1BQU0sRUFDRkMsK0JBQStCQyxVQUFTLEVBQ3hDQyxtQ0FBbUNDLGNBQWEsRUFDaERDLG1DQUFtQ0MsY0FBYSxFQUNuRCxHQUFHQyxRQUFRQyxHQUFHO0FBRWYsTUFBTUMsUUFBUUMsT0FBT0MsSUFBSSxDQUFDLENBQUMsRUFBRVQsVUFBVSxDQUFDLEVBQUVFLGNBQWMsQ0FBQyxFQUFFUSxRQUFRLENBQUM7QUFDcEUsTUFBTUMsdUJBQXVCLENBQUMsc0RBQXNELENBQUM7QUFDckYsTUFBTUMsaUJBQWlCLENBQUMsc0NBQXNDLENBQUM7QUFFL0QsTUFBTUMsaUJBQWlCLFVBQVk7SUFDL0IsTUFBTUMsV0FBVyxNQUFNQyxNQUFNSCxnQkFBZ0I7UUFDekNJLFFBQVE7UUFDUkMsU0FBUztZQUNMQyxlQUFlLENBQUMsTUFBTSxFQUFFWCxNQUFNLENBQUM7WUFDL0IsZ0JBQWdCO1FBQ3BCO1FBQ0FZLE1BQU1yQiw0REFBcUIsQ0FBQztZQUN4QnVCLFlBQVk7WUFDWmpCO1FBQ0o7SUFDSjtJQUVBLE9BQU9VLFNBQVNRLElBQUk7QUFDeEI7QUFFTyxNQUFNQyxnQkFBZ0IsVUFBWTtJQUNyQyxNQUFNLEVBQUVDLGFBQVksRUFBRSxHQUFHLE1BQU1YO0lBRS9CLE9BQU9FLE1BQU1KLHNCQUFzQjtRQUMvQk0sU0FBUztZQUNMQyxlQUFlLENBQUMsT0FBTyxFQUFFTSxhQUFhLENBQUM7UUFDM0M7SUFDSjtBQUNKLEVBQUU7QUFFRixpRUFBZSxPQUFPQyxHQUFHQyxNQUFRO0lBQzdCLE1BQU1aLFdBQVcsTUFBTVM7SUFFdkIsSUFBSVQsU0FBU2EsTUFBTSxLQUFLLE9BQU9iLFNBQVNhLE1BQU0sR0FBRyxLQUFLO1FBQ2xELE9BQU9ELElBQUlDLE1BQU0sQ0FBQyxLQUFLTCxJQUFJLENBQUM7WUFBRU0sV0FBVyxLQUFLO1FBQUM7SUFDbkQsQ0FBQztJQUVELE1BQU1DLE9BQU8sTUFBTWYsU0FBU1EsSUFBSTtJQUNoQyxNQUFNTSxZQUFZQyxLQUFLQyxVQUFVO0lBQ2pDLE1BQU1DLFFBQVFGLEtBQUtHLElBQUksQ0FBQ0MsSUFBSTtJQUM1QixNQUFNQyxTQUFTTCxLQUFLRyxJQUFJLENBQUNHLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLENBQUNDLFVBQVlBLFFBQVFKLElBQUksRUFBRUssSUFBSSxDQUFDO0lBQ3JFLE1BQU1DLFFBQVFWLEtBQUtHLElBQUksQ0FBQ08sS0FBSyxDQUFDTixJQUFJO0lBQ2xDLE1BQU1PLGdCQUFnQlgsS0FBS0csSUFBSSxDQUFDTyxLQUFLLENBQUNFLE1BQU0sQ0FBQyxFQUFFLENBQUNDLEdBQUc7SUFDbkQsTUFBTUMsVUFBVWQsS0FBS0csSUFBSSxDQUFDWSxhQUFhLENBQUNDLE9BQU87SUFFL0MsT0FBT25CLElBQUlDLE1BQU0sQ0FBQyxLQUFLTCxJQUFJLENBQUM7UUFDeEJpQjtRQUNBQztRQUNBTjtRQUNBTjtRQUNBZTtRQUNBWjtJQUNKO0FBQ0osR0FBRSIsInNvdXJjZXMiOlsid2VicGFjazovL3Rlby1uZXh0anMtcG9ydGZvbGlvLy4vc3JjL3BhZ2VzL2FwaS9zcG90aWZ5LmpzPzRiMWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L25vLWFub255bW91cy1kZWZhdWx0LWV4cG9ydCAqL1xyXG5pbXBvcnQgcXVlcnlzdHJpbmcgZnJvbSAncXVlcnlzdHJpbmcnO1xyXG5cclxuY29uc3Qge1xyXG4gICAgTkVYVF9QVUJMSUNfU1BPVElGWV9DTElFTlRfSUQ6IGNsaWVudF9pZCxcclxuICAgIE5FWFRfUFVCTElDX1NQT1RJRllfQ0xJRU5UX1NFQ1JFVDogY2xpZW50X3NlY3JldCxcclxuICAgIE5FWFRfUFVCTElDX1NQT1RJRllfUkVGUkVTSF9UT0tFTjogcmVmcmVzaF90b2tlbixcclxufSA9IHByb2Nlc3MuZW52O1xyXG5cclxuY29uc3QgYmFzaWMgPSBCdWZmZXIuZnJvbShgJHtjbGllbnRfaWR9OiR7Y2xpZW50X3NlY3JldH1gKS50b1N0cmluZygnYmFzZTY0Jyk7XHJcbmNvbnN0IE5PV19QTEFZSU5HX0VORFBPSU5UID0gYGh0dHBzOi8vYXBpLnNwb3RpZnkuY29tL3YxL21lL3BsYXllci9jdXJyZW50bHktcGxheWluZ2A7XHJcbmNvbnN0IFRPS0VOX0VORFBPSU5UID0gYGh0dHBzOi8vYWNjb3VudHMuc3BvdGlmeS5jb20vYXBpL3Rva2VuYDtcclxuXHJcbmNvbnN0IGdldEFjY2Vzc1Rva2VuID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChUT0tFTl9FTkRQT0lOVCwge1xyXG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJhc2ljICR7YmFzaWN9YCxcclxuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogcXVlcnlzdHJpbmcuc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgZ3JhbnRfdHlwZTogJ3JlZnJlc2hfdG9rZW4nLFxyXG4gICAgICAgICAgICByZWZyZXNoX3Rva2VuLFxyXG4gICAgICAgIH0pLFxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBnZXROb3dQbGF5aW5nID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgY29uc3QgeyBhY2Nlc3NfdG9rZW4gfSA9IGF3YWl0IGdldEFjY2Vzc1Rva2VuKCk7XHJcblxyXG4gICAgcmV0dXJuIGZldGNoKE5PV19QTEFZSU5HX0VORFBPSU5ULCB7XHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7YWNjZXNzX3Rva2VufWAsXHJcbiAgICAgICAgfSxcclxuICAgIH0pO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgKF8sIHJlcykgPT4ge1xyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBnZXROb3dQbGF5aW5nKCk7XHJcblxyXG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjA0IHx8IHJlc3BvbnNlLnN0YXR1cyA+IDQwMCkge1xyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7IGlzUGxheWluZzogZmFsc2UgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3Qgc29uZyA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuICAgIGNvbnN0IGlzUGxheWluZyA9IHNvbmcuaXNfcGxheWluZztcclxuICAgIGNvbnN0IHRpdGxlID0gc29uZy5pdGVtLm5hbWU7XHJcbiAgICBjb25zdCBhcnRpc3QgPSBzb25nLml0ZW0uYXJ0aXN0cy5tYXAoKF9hcnRpc3QpID0+IF9hcnRpc3QubmFtZSkuam9pbignLCAnKTtcclxuICAgIGNvbnN0IGFsYnVtID0gc29uZy5pdGVtLmFsYnVtLm5hbWU7XHJcbiAgICBjb25zdCBhbGJ1bUltYWdlVXJsID0gc29uZy5pdGVtLmFsYnVtLmltYWdlc1swXS51cmw7XHJcbiAgICBjb25zdCBzb25nVXJsID0gc29uZy5pdGVtLmV4dGVybmFsX3VybHMuc3BvdGlmeTtcclxuXHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xyXG4gICAgICAgIGFsYnVtLFxyXG4gICAgICAgIGFsYnVtSW1hZ2VVcmwsXHJcbiAgICAgICAgYXJ0aXN0LFxyXG4gICAgICAgIGlzUGxheWluZyxcclxuICAgICAgICBzb25nVXJsLFxyXG4gICAgICAgIHRpdGxlLFxyXG4gICAgfSk7XHJcbn07Il0sIm5hbWVzIjpbInF1ZXJ5c3RyaW5nIiwiTkVYVF9QVUJMSUNfU1BPVElGWV9DTElFTlRfSUQiLCJjbGllbnRfaWQiLCJORVhUX1BVQkxJQ19TUE9USUZZX0NMSUVOVF9TRUNSRVQiLCJjbGllbnRfc2VjcmV0IiwiTkVYVF9QVUJMSUNfU1BPVElGWV9SRUZSRVNIX1RPS0VOIiwicmVmcmVzaF90b2tlbiIsInByb2Nlc3MiLCJlbnYiLCJiYXNpYyIsIkJ1ZmZlciIsImZyb20iLCJ0b1N0cmluZyIsIk5PV19QTEFZSU5HX0VORFBPSU5UIiwiVE9LRU5fRU5EUE9JTlQiLCJnZXRBY2Nlc3NUb2tlbiIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsImJvZHkiLCJzdHJpbmdpZnkiLCJncmFudF90eXBlIiwianNvbiIsImdldE5vd1BsYXlpbmciLCJhY2Nlc3NfdG9rZW4iLCJfIiwicmVzIiwic3RhdHVzIiwiaXNQbGF5aW5nIiwic29uZyIsImlzX3BsYXlpbmciLCJ0aXRsZSIsIml0ZW0iLCJuYW1lIiwiYXJ0aXN0IiwiYXJ0aXN0cyIsIm1hcCIsIl9hcnRpc3QiLCJqb2luIiwiYWxidW0iLCJhbGJ1bUltYWdlVXJsIiwiaW1hZ2VzIiwidXJsIiwic29uZ1VybCIsImV4dGVybmFsX3VybHMiLCJzcG90aWZ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/spotify.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/spotify.js"));
module.exports = __webpack_exports__;

})();